_printf(3) â€” Linux manual page

_printf(3)

NAME

	_printf - Print a formatted string

LIBRARY

	Standard C library (libc, -lc)

SYNOPSIS

	#include "main.h"

	int _printf(const char *format, ...);

DESCRIPTION

	The function printf() produce output according to a format ad described below. 
	It write output to stdout, the standard output stream.

	The function write the ouput under the control of a format string that specifies how subsequent
	arguments (or arguments accessed via stdag(3)) are converted for output.

	The following specifiers are available : c, s, d, i, %.

Format of the format string
	The format string is a character string. The format string is composed
	of zero or more directives: ordinary characters (not %), which
	are copied unchanged to the output stream; and conversion
	specifications, each of which results in fetching zero or more
	subsequent arguments.  Each conversion specification is
	introduced by the character %, and ends with a conversion
	specifier.

	The overall syntax of a conversion specification is:

		%conversion

	The arguments must correspond properly with the conversion specifier.
	By default, the arguments are used in the order given, where each
	conversion specifier asks for the next argument (and it is an error
	if insufficiently many arguments are given).

Conversion specifiers
	A character that specifies the type of conversion to be applied.
    The conversion specifiers and their meanings are:

	c		The int argument is converted to an unsigned char,
			and the resulting character is written.

	s		The const char * argument is expected to be a pointer to
			an array of character type (pointer to a string). Characters from
			the array are written up to (but not including) a terminating null byte ('\0')

	d, i	The int argument is converted to signed decimal notation.

	%      	A '%' is written.cNo argument is converted. The complete
            conversion specification is '%%'.
		
	b		The unsigned int argument is converted to binary integer.

	o, u, x, X
			The unsigned int argument is converted to unsigned octal (o),
			unsigned decimal (u), or unsigned hexadecimal (x and X) notation.
			The letters abcdef are used for x conversions; the letters ABCDEF
			are used for X conversions.
			
RETURN VALUE

	Upon successful return, these functions return the number of bytes printed
	(excluding the null byte used to end output to strings).

	If an output error is encountered, a negative value is returned.

STANDARDS

	printf()
		C89, POSIX.1-2001.

EXAMPLES

	To print a char 'c' :

		#include "main.h"
		_printf("%c", 'c');


UPDATE

	23/07/2024

